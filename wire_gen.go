// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"attendance/api/auth"
	"attendance/api/restHandler"
	"attendance/api/router"
	"attendance/repository"
	"attendance/services"
	"github.com/go-pg/pg"
)

// Injectors from wire.go:

func InitializeApp(db *pg.DB) *router.MUXRouterImpl {
	repositoryImpl := repository.NewRepositoryImpl(db)
	homeServiceImpl := services.NewHomeServiceImpl(repositoryImpl)
	authTokenImpl := auth.NewAuthTokenImpl(repositoryImpl)
	homeImpl := restHandler.NewHomeImpl(homeServiceImpl, authTokenImpl)
	loginImpl := restHandler.NewLoginImpl(repositoryImpl, authTokenImpl)
	newUserServiceImpl := services.NewNewUserServiceImpl(repositoryImpl)
	newUserImpl := restHandler.NewNewUserImpl(newUserServiceImpl, authTokenImpl)
	punchInOutServiceImpl := services.NewPunchInOutServiceImpl(repositoryImpl)
	punchInOutImpl := restHandler.NewPunchInOutImpl(punchInOutServiceImpl, authTokenImpl)
	teacherAttendanceServiceImpl := services.NewTeacherAttendanceServiceImpl(repositoryImpl)
	teacherAttendanceImpl := restHandler.NewTeacherAttendanceImpl(teacherAttendanceServiceImpl, authTokenImpl)
	classAttendanceImpl := services.NewClassAttendanceImpl(repositoryImpl)
	restHandlerClassAttendanceImpl := restHandler.NewClassAttendanceImpl(classAttendanceImpl, authTokenImpl)
	studentAttendanceServiceImpl := services.NewStudentAttendanceServiceImpl(repositoryImpl)
	studentAttendanceImpl := restHandler.NewStudentAttendanceImpl(studentAttendanceServiceImpl, authTokenImpl)
	fetchStatusImpl := services.NewFetchStatusImpl(repositoryImpl)
	restHandlerFetchStatusImpl := restHandler.NewFetchStatusImpl(fetchStatusImpl, authTokenImpl)
	muxRouterImpl := router.NewMUXRouterImpl(homeImpl, loginImpl, newUserImpl, punchInOutImpl, teacherAttendanceImpl, restHandlerClassAttendanceImpl, studentAttendanceImpl, restHandlerFetchStatusImpl)
	return muxRouterImpl
}
